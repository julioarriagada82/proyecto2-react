{"version":3,"sources":["serviceWorker.js","redux/characters/index.js","redux/episodes/index.js","redux/users/index.js","redux/reducers.js","redux/store.js","containers/CharactersContainer/index.js","redux/characters/thunks.js","components/NavBar/index.js","redux/users/thunks.js","pages/CharactersPage/index.js","containers/EpisodesContainer/index.js","redux/episodes/thunks.js","pages/EpisodesPage/index.js","pages/ComparisonsPage/index.js","pages/HomePage/index.js","containers/LoginContainer/index.js","pages/LoginPage/index.js","components/PrivateRoute/index.js","components/NotLoggedInRoute/index.js","containers/RegisterContainer/index.js","pages/RegisterPage/index.js","routes.js","index.js"],"names":["Boolean","window","location","hostname","match","getCharacterSuccess","response","type","payload","info","characters","initialState","infoApi","count","pages","next","prev","currentPage","loading","error","getEpisodeSuccess","episodes","users","1","name","password","email","favoriteCharacters","favoriteEpisodes","2","userList","loggedIn","loggedOut","combineReducers","state","arguments","length","undefined","action","Object","objectSpread","_action$payload","concat","toConsumableArray","userId","id","defineProperty","store","createStore","rootReducer","applyMiddleware","thunk","mapDispatchToProps","getCharacters","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","url","_response$data","results","wrap","_context","axios","get","sent","data","t0","stop","_x","_x2","apply","this","connect","_state$characters","props","useEffect","react_default","createElement","className","map","character","index","key","src","image","alt","status","species","gender","onClick","logout","localStorage","getItem","removeItem","logoutSuccess","_state$users","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","react_router_dom","to","exact","activeClassName","onSubmit","event","preventDefault","react_router","push","CharactersPage","components_NavBar","containers_CharactersContainer","getEpisodes","_state$episodes","scope","episode","air_date","EpisodesPage","containers_EpisodesContainer","ComparisonsPage","HomePage","login","find","fakeLogin","setItem","loginSuccess","_useState","useState","_useState2","slicedToArray","values","setValues","handleChange","_event$target","target","value","console","log","htmlFor","required","onChange","aria-describedby","placeholder","role","LoginPage","containers_LoginContainer","PrivateRoute","Component","component","rest","objectWithoutProperties","assign","render","mdp","addUser","_ref2","_state$users2","toReturn","some","uid","newId","fakeAddUser","addUserError","e","_e$target","RegisterPage","containers_RegisterContainer","Routes","components_PrivateRoute","path","NotLoggedInRoute","ReactDOM","es","routes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2fde5ec1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const GET_CHARACTERS_REQUEST = 'GET_CHARACTERS_REQUEST'\nconst GET_CHARACTERS_SUCCESS = 'GET_CHARACTERS_SUCCESS'\nconst GET_CHARACTERS_ERROR = 'GET_CHARACTERS_ERROR'\n\nexport const getCharacterRequest = () => ({ type: GET_CHARACTERS_REQUEST })\n\nexport const getCharacterSuccess = response => {\n  const {\n    info,\n    characters\n  } = response\n\n  return {\n    type: GET_CHARACTERS_SUCCESS,\n    payload: {\n      info,\n      characters\n    }\n  }\n}\n\nexport const getCharacterError = error => ({\n  type: GET_CHARACTERS_ERROR,\n  payload: {\n    error\n  }\n})\n\nconst initialState = {\n  infoApi: {\n    count: 0,\n    pages: 0,\n    next: 'https://rickandmortyapi.com/api/character/',\n    prev: '',\n    currentPage: 0\n  },\n  characters: [],\n  loading: true,\n  error: null\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CHARACTERS_REQUEST: {\n      return {\n        ...state,\n        loading: true,\n        error: null\n      }\n    }\n\n    case GET_CHARACTERS_SUCCESS: {\n      const { characters, info } = action.payload\n\n      const {\n        pages,\n        next,\n        prev,\n        count\n      } = info\n\n      return {\n        ...state,\n        infoApi: {\n          ...state.infoApi,\n          pages,\n          next,\n          prev,\n          count,\n          currentPage: state.infoApi.currentPage + 1\n        },\n        loading: false,\n        characters: [...state.characters, ...characters],\n        error: null\n      }\n    }\n\n    case GET_CHARACTERS_ERROR: {\n      const { error } = action.payload\n\n      return {\n        ...state,\n        loading: false,\n        error\n      }\n    }\n\n    default: return state\n  }\n} \n","const GET_EPISODES_REQUEST = 'GET_EPISODES_REQUEST'\r\nconst GET_EPISODES_SUCCESS = 'GET_EPISODES_SUCCESS'\r\nconst GET_EPISODES_ERROR = 'GET_EPISODESS_ERROR'\r\n\r\nexport const getEpisodeRequest = () => ({ type: GET_EPISODES_REQUEST })\r\n\r\nexport const getEpisodeSuccess = response => {\r\n  const {\r\n    info,\r\n    episodes\r\n  } = response\r\n\r\n  return {\r\n    type: GET_EPISODES_SUCCESS,\r\n    payload: {\r\n      info,\r\n      episodes\r\n    }\r\n  }\r\n}\r\n\r\nexport const getEpisodeError = error => ({\r\n  type: GET_EPISODES_ERROR,\r\n  payload: {\r\n    error\r\n  }\r\n})\r\n\r\nconst initialState = {\r\n  infoApi: {\r\n    count: 0,\r\n    pages: 0,\r\n    next: 'https://rickandmortyapi.com/api/episode/',\r\n    prev: '',\r\n    currentPage: 0\r\n  },\r\n  episodes: [],\r\n  loading: true,\r\n  error: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_EPISODES_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      }\r\n    }\r\n\r\n    case GET_EPISODES_SUCCESS: {\r\n      const { episodes, info } = action.payload\r\n\r\n      const {\r\n        pages,\r\n        next,\r\n        prev,\r\n        count\r\n      } = info\r\n\r\n      return {\r\n        ...state,\r\n        infoApi: {\r\n          ...state.infoApi,\r\n          pages,\r\n          next,\r\n          prev,\r\n          count,\r\n          currentPage: state.infoApi.currentPage + 1\r\n        },\r\n        loading: false,\r\n        episodes: [...state.episodes, ...episodes],\r\n        error: null\r\n      }\r\n    }\r\n\r\n    case GET_EPISODES_ERROR: {\r\n      const { error } = action.payload\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error\r\n      }\r\n    }\r\n\r\n    default: return state\r\n  }\r\n} \r\n","const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nconst LOGIN_REQUEST = 'LOGIN_REQUEST'\nconst LOGIN_ERROR = 'LOGIN_ERROR'\n\nconst LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nconst LOGOUT_REQUEST = 'LOGOUT_REQUEST'\nconst LOGOUT_ERROR = 'LOGOUT_ERROR'\n\nconst ADD_USER_REQUEST = 'ADD_USER_REQUEST'\nconst ADD_USER_SUCCESS = 'ADD_USER_SUCCESS'\nconst ADD_USER_ERROR = 'ADD_USER_ERROR'\n\nexport const loginRequest = () => ({\n  type: LOGIN_REQUEST\n})\n\nexport const loginSuccess = userId => ({\n  type: LOGIN_SUCCESS,\n  payload: {\n    userId\n  }\n})\n\nexport const loginError = error => ({\n  type: LOGIN_ERROR,\n  payload: {\n    error\n  }\n})\n\nexport const logoutRequest = () => ({\n  type: LOGOUT_REQUEST\n})\n\nexport const logoutSuccess = userId => ({\n  type: LOGOUT_SUCCESS,\n  payload: {\n    userId\n  }\n})\n\nexport const logoutError = error => ({\n  type: LOGOUT_ERROR,\n  payload: {\n    error\n  }\n})\n\nexport const addUserRequest = () => ({\n  type: ADD_USER_REQUEST\n})\n\nexport const addUserSuccess = ({\n  name, password, email, id\n}) => ({\n  type: ADD_USER_SUCCESS,\n  payload: {\n    name,\n    password,\n    email,\n    id\n  }\n})\n\nexport const addUserError = error => ({\n  type: ADD_USER_ERROR,\n  payload: {\n    error\n  }\n})\n\nconst initialState = {\n  users: {\n    '1': {\n      name: 'Julio Arriagada',\n      password: '123',\n      email: 'julioarriagada@gmail.com',\n      favoriteCharacters: ['1', '2'],\n      favoriteEpisodes: ['3', '4']\n    },\n    '2': {\n      name: 'Usuario Prueba',\n      password: '123',\n      email: 'usuario@rm.com',\n      favoriteCharacters: ['5', '6'],\n      favoriteEpisodes: ['7', '8']\n    }\n  },\n  userList: ['1', '2'],\n  loggedIn: null,\n  loggedOut: false,\n  loading: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST: {\n      return {\n        ...state,\n        loading: true\n      }\n    }\n\n    case LOGIN_SUCCESS: {\n      return {\n        ...state,\n        loggedIn: action.payload.userId,\n        loading: false,\n        error: null\n      }\n    }\n\n    case LOGIN_ERROR: {\n      return {\n        ...state,\n        error: action.payload.error,\n        loading: false\n      }\n    }\n\n    case LOGOUT_REQUEST: {\n      return {\n        ...state,\n        loading: true\n      }\n    }\n\n    case LOGOUT_SUCCESS: {\n      return {\n        ...state,\n        loggedIn: null,\n        loggedOut: true,\n        loading: false,\n        error: null\n      }\n    }\n\n    case LOGOUT_ERROR: {\n      return {\n        ...state,\n        error: action.payload.error,\n        loading: false\n      }\n    }\n\n\n    case ADD_USER_REQUEST: {\n      return {\n        ...state,\n        loading: true\n      }\n    }\n\n    case ADD_USER_SUCCESS: {\n      const {\n        id,\n        name,\n        email,\n        password\n      } = action.payload\n\n      return {\n        ...state,\n        users: {\n          ...state.users,\n          [id]: {\n            name,\n            email,\n            password,\n            favoriteCharacters: [],\n            favoriteEpisodes: []\n          }\n        },\n        userList: [...state.userList, id],\n        loading: false,\n        error: null\n      }\n    }\n\n    case ADD_USER_ERROR: {\n      return {\n        ...state,\n        error: action.payload.error,\n        loading: false\n      }\n    }\n    default: return state\n  }\n}","import { combineReducers } from 'redux'\nimport charactersReducer from './characters'\nimport episodesReducer from './episodes'\nimport usersReducer from './users'\n\nexport default combineReducers({\n  characters: charactersReducer,\n  episodes: episodesReducer,\n  users: usersReducer,\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(rootReducer, applyMiddleware(\n  thunk\n))\n\nexport default store\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { getCharacters as getCharactersCreator } from '../../redux/characters/thunks'\n\nconst CharactersContainer = props => {\n  const {\n    characters,\n    loading,\n    pages,\n    currentPage,\n    count,\n    getCharacters\n  } = props\n\n  useEffect(() => {\n    getCharacters()\n  }, [])\n\n  return (\n    <div>\n      {loading && 'Loading.....'}\n      {!loading && <div>Hay {count} elementos.</div>}\n      <div className=\"row\">\n        {characters.map((character, index) => (\n          <div key={index} className=\"col-12 col-sm-8 col-md-6 col-lg-4\">\n          <div className=\"card\">\n            <img className=\"card-img-top\" src={character.image} alt={character.name} />\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">{character.name}</h4>\n              <span className=\"badge badge-primary\">{character.status}</span>\n                <span className=\"badge badge-secondary\">{character.species}</span>\n                <span className=\"badge badge-success\">{character.gender}</span>\n            </div>\n            <div className=\"card-body\">\n              <button className=\"btn btn-primary\">Favorito</button>\n            </div>\n          </div>\n        </div>\n        ))}\n      </div>\n      {!loading && <div>Hay {pages} páginas, estás en la página {currentPage} </div>}\n      {(!loading && currentPage < pages) && <button onClick={getCharacters}>Ver más</button>}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  const {\n    characters,\n    loading,\n    error,\n    infoApi\n  } = state.characters\n\n  const {\n    count,\n    currentPage,\n    pages\n  } = infoApi\n\n  return {\n    characters,\n    loading,\n    error,\n    count,\n    currentPage,\n    pages\n  }\n}\n\nconst mapDispatchToProps = {\n  getCharacters: getCharactersCreator\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CharactersContainer)\n","import {\n  getCharacterRequest,\n  getCharacterSuccess,\n  getCharacterError\n} from './index'\nimport axios from 'axios'\n\nexport const getCharacters = () => async (dispatch, getState) => {\n  dispatch(getCharacterRequest())\n  \n  const {\n    next: url\n  } = getState().characters.infoApi\n\n  try {\n    const response = await axios.get(url)\n\n    const {\n      results,\n      info\n    } = response.data\n\n    dispatch(getCharacterSuccess({\n      info,\n      characters: results\n    }))\n  } catch (error) {\n    dispatch(getCharacterError(error))\n  }\n}\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink , Redirect} from 'react-router-dom'\r\nimport { logout as logoutCreator } from '../../redux/users/thunks'\r\n\r\nconst NavBar = props => {\r\n    const {\r\n        logout,\r\n        loggedOut\r\n      } = props\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        logout()\r\n      }\r\n\r\n    return (\r\n\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"/\">The Rick and Morty</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to='/proyecto2-react/' exact={true} activeClassName=\"active\" className=\"nav-link\">Ir a Home</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to='/proyecto2-react/characters' exact={true} activeClassName=\"active\" className=\"nav-link\" >Ver Personajes</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to='/proyecto2-react/episodes' exact={true} activeClassName=\"active\" className=\"nav-link\" >Ver Episodios</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to='/proyecto2-react/comparisons' exact={true} activeClassName=\"active\" className=\"nav-link\">Comparaciones</NavLink>\r\n                        </li>\r\n                </ul>\r\n            </div>\r\n            <form className=\"form-inline\" onSubmit={handleSubmit}>\r\n                <button type='submit' className=\"btn btn-danger\">Logout</button>\r\n            </form>\r\n            {loggedOut && <Redirect push to=\"/proyecto2-react/login\"/> }\r\n        </nav>\r\n    )\r\n  }\r\n  \r\n  const mapStateToProps = state => {\r\n    const {\r\n      loading,\r\n      error,\r\n      loggedOut,\r\n      users\r\n    } = state.users\r\n  \r\n    return {\r\n      loading,\r\n      error,\r\n      loggedOut,\r\n      users\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = {\r\n    logout: logoutCreator\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import {\n  loginError,\n  loginSuccess,\n  loginRequest,\n  logoutError,\n  logoutSuccess,\n  logoutRequest,\n  addUserError,\n  addUserRequest,\n  addUserSuccess\n} from './index'\n\nconst fakeLogin = (email, password, state) => {\n  const { users, userList } = state.users\n\n  return userList.find(userId => {\n    return (\n      users[userId].email === email &&\n      users[userId].password === password\n    )\n  })\n}\n\nconst fakeAddUser = ({email, password, name, state}) => {\n  const {\n    users,\n    userList\n  } = state.users\n\n  const emailExists = userList.some(uid => users[uid].email === email)\n\n  const toReturn = {}\n\n  if (!emailExists) {\n    toReturn.newId = userList.length + 1\n  } else {\n    toReturn.error = 'Ya existe este usuario.'\n  }\n\n  return toReturn\n}\n\nexport const login = (email, password) => (dispatch, getState) => {\n  dispatch(loginRequest())\n\n  const userId = fakeLogin(email, password, getState())\n\n  if (userId) {\n    localStorage.setItem('userId', userId)\n    dispatch(loginSuccess(userId))\n  } else {\n    dispatch(loginError('Password o email incorrecto'))\n  }\n}\n\nexport const logout = () => (dispatch, getState) => {\n  dispatch(logoutRequest())\n  const userId = localStorage.getItem('userId')\n\n  if (userId) {\n    localStorage.removeItem('userId');\n    dispatch(logoutSuccess(userId))\n  } else {\n    dispatch(logoutError('Usuario no se encuentra logueado'))\n  }\n}\n\nexport const addUser = ({email, password, name}) => (dispatch, getState) => {\n  dispatch(addUserRequest())\n\n  const response = fakeAddUser({\n    email,\n    password,\n    name,\n    state: getState()\n  })\n\n  const {\n    error,\n    newId\n  } = response\n\n  if (!error) {\n    dispatch(addUserSuccess({\n      id: newId,\n      email,\n      name,\n      password\n    }))\n  } else {\n    dispatch(addUserError(error))\n  }\n\n}","import React from 'react'\nimport CharactersContainer from '../../containers/CharactersContainer'\nimport NavBar from '../../components/NavBar'\n\nconst CharactersPage = () => {\n  return (\n    <div className=\"container\">\n      <NavBar />\n      <CharactersContainer />\n    </div>\n  )\n}\n\nexport default CharactersPage\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { getEpisodes as getEpisodesCreator } from '../../redux/episodes/thunks'\r\n\r\nconst EpisodesContainer = props => {\r\n  const {\r\n    episodes,\r\n    loading,\r\n    pages,\r\n    currentPage,\r\n    count,\r\n    getEpisodes\r\n  } = props\r\n\r\n  useEffect(() => {\r\n    getEpisodes()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      {loading && 'Loading.....'}\r\n      {!loading && <div>Hay {count} elementos.</div>}\r\n\r\n      {!loading &&\r\n        <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Nombre Episodio</th>\r\n            <th scope=\"col\">Fecha al aire</th>\r\n            <th scope=\"col\">Nombre episodio</th>\r\n            <th>Favorito</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {episodes.map((episode, index) => (\r\n            <tr key={index}>\r\n              <th scope=\"row\">{episode.id}</th>\r\n              <td>{episode.name}</td>\r\n              <td>{episode.air_date}</td>\r\n              <td>{episode.episode}</td>\r\n              <td><button className=\"btn btn-secundary\">Agregar</button></td>\r\n            </tr>\r\n        ))}\r\n        </tbody>\r\n      </table>\r\n      }\r\n      {!loading && <div>Hay {pages} páginas, estás en la página {currentPage} </div>}\r\n        {(!loading && currentPage < pages) && <button onClick={getEpisodes}>Ver más</button>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {\r\n    episodes,\r\n    loading,\r\n    error,\r\n    infoApi\r\n  } = state.episodes\r\n\r\n  const {\r\n    count,\r\n    currentPage,\r\n    pages\r\n  } = infoApi\r\n\r\n  return {\r\n    episodes,\r\n    loading,\r\n    error,\r\n    count,\r\n    currentPage,\r\n    pages\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getEpisodes: getEpisodesCreator\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EpisodesContainer)\r\n","import {\r\n    getEpisodeRequest,\r\n    getEpisodeSuccess,\r\n    getEpisodeError\r\n  } from './index'\r\n  import axios from 'axios'\r\n  \r\n  export const getEpisodes = () => async (dispatch, getState) => {\r\n    dispatch(getEpisodeRequest())\r\n    \r\n    const {\r\n      next: url\r\n    } = getState().episodes.infoApi\r\n  \r\n    try {\r\n      const response = await axios.get(url)\r\n  \r\n      const {\r\n        results,\r\n        info\r\n      } = response.data\r\n  \r\n      dispatch(getEpisodeSuccess({\r\n        info,\r\n        episodes: results\r\n      }))\r\n    } catch (error) {\r\n      dispatch(getEpisodeError(error))\r\n    }\r\n  }\r\n  ","import React from 'react'\nimport EpisodesContainer from '../../containers/EpisodesContainer'\nimport NavBar from '../../components/NavBar'\n\nconst EpisodesPage = props => {\n  return (\n    <div className=\"container\">\n      <NavBar />\n      <EpisodesContainer />\n    </div>\n  )\n}\n\nexport default EpisodesPage","import React from 'react'\r\nimport NavBar from '../../components/NavBar'\r\n\r\nconst ComparisonsPage = () => {\r\n  return (\r\n    <div className=\"container\">\r\n    <NavBar />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default ComparisonsPage\r\n","import React from 'react'\nimport NavBar from '../../components/NavBar'\n\nconst HomePage = () => {\n  return (\n    <div className=\"container\">\n    <NavBar />\n    <div className=\"row\">\n      <div className=\"col-sm\">\n      </div>\n      <div className=\"col-6\">\n        <h1>THE RICK AND MORTY API </h1>\n        <p>HEY, DID YOU EVER WANT TO HOLD A TERRY FOLD?</p>\n      </div>\n      <div className=\"col-sm\">\n      </div>\n    </div>\n  </div>\n  )\n}\n\nexport default HomePage\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { login as loginCreator } from '../../redux/users/thunks'\n\nconst LoginContainer = props => {\n  const {\n    login,\n    error,\n    loading,\n    users\n  } = props\n\n  const [values, setValues] = useState({\n    email: '',\n    password: ''\n  })\n\n  const handleChange = (event) => {\n    const {\n      name,\n      value\n    } = event.target\n\n    setValues({\n      ...values,\n      [name]: value\n    })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    console.log(users)\n\n    login(values.email, values.password)\n  }\n\n  return (\n    <div className=\"row\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email address</label>\n          <input\n            required\n            type=\"email\"\n            name='email'\n            className=\"form-control\"\n            value={values['']}\n            onChange={handleChange}\n            aria-describedby=\"emailHelp\" \n            placeholder=\"Ingrese email\"\n            />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            required\n            type=\"password\"\n            name='password'\n            className=\"form-control\"\n            value={values['']}\n            onChange={handleChange}\n            placeholder=\"Password\"\n            />\n        </div>\n        {error && <div className=\"alert alert-warning\" role=\"alert\">{error}</div>}\n        {!loading && <button type='submit' className=\"btn btn-primary\">Login</button>}\n        <Link to='/register' className=\"btn btn-secundary\">Registrarse</Link>\n      </form>\n    </div>\n    )\n}\n\nconst mapStateToProps = state => {\n  const {\n    loading,\n    error,\n    users\n  } = state.users\n\n  return {\n    loading,\n    error,\n    users\n  }\n}\n\nconst mapDispatchToProps = {\n  login: loginCreator\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer)\n","import React from 'react'\nimport LoginContainer from '../../containers/LoginContainer'\n\nconst LoginPage = () => {\n  return (\n    <div className=\"container\">\n      <LoginContainer />\n    </div>\n  )\n}\n\nexport default LoginPage\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst PrivateRoute = props => {\n  const {\n    component: Component,\n    ...rest\n  } = props\n\n  const userId = localStorage.getItem('userId')\n\n  return (\n    <Route\n      render={(props) => {\n        if (userId) {\n          return <Component {...props} />\n        } else {\n          return <Redirect to='/proyecto2-react/' />\n        }\n      }}\n      {...rest}\n    />\n  )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst NotLoggedIn = props => {\n  const {\n    component: Component,\n    ...rest\n  } = props\n\n  const userId = localStorage.getItem('userId')\n\n  return (\n    <Route\n      render={(props) => {\n        if (!userId) {\n          return <Component {...props} />\n        } else {\n          return <Redirect to='/proyecto2-react/' />\n        }\n      }}\n      {...rest}\n    />\n  )\n}\n\nconst msp = state => {\n  const {\n    loading\n  } = state.users\n\n  return {\n    loading\n  }\n}\n\nexport default connect(msp)(NotLoggedIn)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addUser as addUserCreator } from '../../redux/users/thunks'\nimport { Link, Redirect } from 'react-router-dom'\n\nconst RegisterContainer = props => {\n  const {\n    loading,\n    addUser,\n    error\n  } = props\n\n  const [values, setValues] = useState({\n    name: '',\n    password: '',\n    email: '',\n  })\n\n  const handleChange = (e) => {\n    const {\n      name,\n      value\n    } = e.target\n\n    setValues({\n      ...values,\n      [name]: value\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    addUser(values)\n  }\n\n  return (\n    <div className=\"row\">\n      <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"name\">Nombre usuario</label>\n        <input\n          required\n          type=\"text\"\n          name='name'\n          className=\"form-control\"\n          placeholder='Ingrese el name'\n          value={values['name']}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          required\n          type=\"email\"\n          name='email'\n          className=\"form-control\"\n          placeholder='Ingrese el email'\n          value={values['email']}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"password\">Password</label>\n        <input\n          required\n          type=\"password\"\n          name='password'\n          className=\"form-control\"\n          placeholder='Ingrese el password'\n          value={values['password']}\n          onChange={handleChange}\n        />\n      </div>\n        {error && <div className=\"alert alert-warning\" role=\"alert\">{error}</div>}\n        {!loading && (\n          <button className=\"btn btn-primary\" type='submit'>\n            Registrar\n        </button>)}\n        <Link to='/login' className=\"btn btn-secundary\">Volver</Link>\n      </form>\n    </div>\n  )\n}\n\nconst msp = state => {\n  const {\n    loading,\n    error\n  } = state.users\n\n  return {\n    loading,\n    error\n  }\n}\n\nconst mdp = {\n  addUser: addUserCreator\n}\n\nexport default connect(msp, mdp)(RegisterContainer)\n","import React from 'react'\nimport RegisterContainer from '../../containers/RegisterContainer'\n\nconst RegisterPage = () => (\n  <div className=\"container\">\n    <RegisterContainer />\n  </div>\n)\n\nexport default RegisterPage\n","import React from 'react'\nimport { BrowserRouter as Router, Switch } from 'react-router-dom'\nimport CharactersPage from './pages/CharactersPage'\nimport EpisodesPage from './pages/EpisodesPage'\nimport ComparisonsPage from './pages/ComparisonsPage'\nimport HomePage from './pages/HomePage'\nimport LoginPage from './pages/LoginPage'\nimport PrivateRoute from './components/PrivateRoute'\nimport NotLoggedInRoute from './components/NotLoggedInRoute'\nimport RegisterPage from './pages/RegisterPage'\n\nconst Routes = () => {\n  return (\n    <Router>\n      <Switch>\n        <PrivateRoute path='/proyecto2-react/' exact component={HomePage} />\n        <PrivateRoute path='/proyecto2-react/characters' exact component={CharactersPage} />\n        <PrivateRoute path='/proyecto2-react/episodes' exact component={EpisodesPage} />\n        <PrivateRoute path='/proyecto2-react/comparisons' exact component={ComparisonsPage} />\n        <NotLoggedInRoute path='/proyecto2-react/login' exact component={LoginPage} />\n        <NotLoggedInRoute exact path='/proyecto2-react/register' component={RegisterPage} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default Routes\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport Routes from './routes'\n\nconst Root = () => {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  )\n}\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}